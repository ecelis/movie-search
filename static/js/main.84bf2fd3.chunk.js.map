{"version":3,"sources":["components/SearchBox.module.css","components/Movie.jsx","components/ResultSet.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Movie","props","info","Title","Year","imdbID","Poster","Type","alt","src","ResultSet","items","Search","Response","map","SearchBox","useState","text","setText","apiKey","setApikey","handleResult","handleForm","event","target","name","value","getSearch","url","fetch","method","then","response","a","json","catch","error","console","log","Fragment","className","styles","item","htmlFor","type","onChange","onClick","App","movie","setMovie","result","parseInt","totalResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,0B,4LCEV,SAASC,EAAMC,GAAQ,IAAD,EACWA,EAAMC,KAA5CC,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,KAAMC,EADc,EACdA,OAAQC,EADM,EACNA,OAAQC,EADF,EACEA,KAErC,OACE,oCACE,6BAAKJ,IACL,uCAAQI,EAAR,YAAgBH,EAAhB,kBAA8BC,KAC9B,qBAAKG,IAAG,UAAKR,EAAL,aAAuBS,IAAKH,O,MCN3B,SAASI,EAAUT,GAAQ,IAAD,EACVA,EAAMU,MAA3BC,EAD+B,EAC/BA,OAER,MACe,SAJwB,EACvBC,SAIdD,EAAOE,KAAI,SAAAZ,GACT,OAAO,cAACF,EAAD,CAAOE,KAAMA,GAAWA,EAAKG,WAGtC,+C,2CCRW,SAASU,EAAUd,GAAQ,IAAD,EACbe,mBAAS,IADI,mBAC/BC,EAD+B,KACzBC,EADyB,OAETF,mBAAS,IAFA,mBAE/BG,EAF+B,KAEvBC,EAFuB,KAI/BC,EAAiBpB,EAAjBoB,aAEFC,EAAa,SAACC,GAAW,IAAD,EACNA,EAAMC,OAArBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAEb,OAAQD,GACN,IAAK,OACHP,EAAQQ,GACR,MACA,IAAK,SACLN,EAAUM,GACV,MACF,QACEC,MAKAA,EAAY,WAChB,IAAMC,EAAG,UAzBD,2BAyBC,kBAAmBT,EAAnB,cAA+BF,GACxC,IACEY,MAAMD,EAAK,CACTE,OAAQ,MACR,eAAgB,qBACfC,KAHH,uCAGQ,WAAMC,GAAN,SAAAC,EAAA,kEACNZ,EADM,SACaW,EAASE,OADtB,6EAHR,uDAKGC,OAAM,SAAAC,GAAK,OAAKC,QAAQC,IAAIF,MAC/B,MAAOA,GACPC,QAAQC,IAAIF,KAIhB,OACE,eAAC,IAAMG,SAAP,WACE,sBAAKC,UAAS,UAAKC,IAAOC,KAAZ,gBAAd,UACE,uBAAOC,QAAQ,SAAf,0BACA,uBAAOC,KAAK,OAAOnB,KAAK,SAASC,MAAOP,EACtC0B,SAAUvB,OAGd,qBAAKkB,UAAS,UAAKC,IAAOC,KAAZ,kBAAd,SACE,uBAAOE,KAAK,OAAOnB,KAAK,OAAOC,MAAOT,EACpC4B,SAAUvB,EACVkB,UAAU,WAGd,qBAAKA,UAAWC,IAAOC,KAAvB,SACE,wBAAQhB,MAAM,SAASD,KAAK,SAASqB,QAASxB,EAA9C,yBCtBOyB,MA5Bf,WAAgB,IAAD,EACa/B,qBADb,mBACNgC,EADM,KACCC,EADD,KAOb,OACE,sBAAKT,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAACzB,EAAD,CAAWM,aAPI,SAAS6B,GAC5BD,EAASC,QAQP,sBAAMV,UAAU,YAAhB,SACGQ,EAEGG,SAASH,EAAMI,cAAgB,EAE7B,cAAC1C,EAAD,CAAWC,MAAOqC,IACc,GAAhCG,SAASH,EAAMI,cACf,cAACpD,EAAD,CAAOE,KAAM8C,EAAMpC,OAAO,KAAS,KAEvC,WCfKyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84bf2fd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchBox_item__3HO-I\"};","import React from 'react';\nimport styles from './Movie.module.css';\n\nexport default function Movie(props) {\n  const { Title, Year, imdbID, Poster, Type } = props.info;\n\n  return (\n    <article>\n      <h3>{Title}</h3>\n      <h6>{`${Type} ${Year} IMDB: ${imdbID}`}</h6>\n      <img alt={`${Movie}'s poster`} src={Poster} />\n    </article>\n  );\n}\n\n\n","import React from 'react';\nimport Movie from './Movie';\nimport styles from './ResultSet.module.css';\n\nexport default function ResultSet(props) {\n  const { Search, Response } = props.items;\n\n  return (\n    Response === 'True' ?\n    Search.map(info => {\n      return <Movie info={info} key={info.imdbID} />\n    })\n    :\n    <h3>No movies :'(</h3>\n  );\n}\n\n\n","import React, { useState } from 'react';\nimport styles from './SearchBox.module.css';\n\nconst api = 'http://www.omdbapi.com/?';\n\nexport default function SearchBox(props) {\n  const [ text, setText ] = useState('');\n  const [ apiKey, setApikey ] = useState('');\n\n  const { handleResult } = props;\n\n  const handleForm = (event) => {\n    const {name, value} = event.target;\n\n    switch (name) {\n      case 'text':\n        setText(value);\n        break;\n        case 'apikey':\n        setApikey(value);\n        break;\n      default:\n        getSearch();\n        break;\n    }\n  }\n\n  const getSearch = () => {\n    const url = `${api}apikey=${apiKey}&s=${text}`\n    try {\n      fetch(url, {\n        method: 'GET',\n        'Content-Type': 'application/json'\n      }).then(async response => {\n        handleResult(await response.json())\n      }).catch(error =>  console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className={`${styles.item} align-start`}>\n        <label htmlFor=\"apikey\">OMDB API Key</label>\n        <input type=\"text\" name=\"apikey\" value={apiKey}\n          onChange={handleForm}\n        />\n      </div>\n      <div className={`${styles.item} align-stretch`}>\n        <input type=\"text\" name=\"text\" value={text}\n          onChange={handleForm}\n          className=\"w100\"\n        />\n      </div>\n      <div className={styles.item}>\n        <button value='Search' name=\"search\" onClick={handleForm}>Search</button>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport Movie from './components/Movie';\nimport ResultSet from './components/ResultSet';\nimport SearchBox from './components/SearchBox';\n\nfunction App() {\n  const [movie, setMovie] = useState();\n\n  const handleResult = function(result) {\n    setMovie(result);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SearchBox handleResult={handleResult} />\n      </header>\n      <main className=\"container\">\n        {movie\n          ?\n            parseInt(movie.totalResults) > 1\n            ?\n              <ResultSet items={movie} />\n            : parseInt(movie.totalResults) == 1 ?\n              <Movie info={movie.Search[0]} /> : null\n          :\n          null\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}